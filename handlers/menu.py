from aiogram import Router, F
from aiogram.types import Message

from keyboards.menu import main_menu_kb
from keyboards.tasks import tasks_inline_kb, reminder_inline_kb

from database import db

router = Router()


@router.message(F.text == "/menu")
async def menu_command(message: Message):
    await message.answer("–ì–ª–∞–≤–Ω–æ–µ –ú–µ–Ω—é\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=main_menu_kb)



@router.message(F.text == "üìã –ó–∞–¥–∞–Ω–∏—è")
async def tasks(message: Message):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –∑–∞–¥–∞–Ω–∏–µ", reply_markup=tasks_inline_kb)

@router.message(F.text == "‚è∞ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è")
async def reminder(message: Message):
    reminder = db.is_reminder_exist(message.from_user.id)
    if reminder:
        await message.answer(f"–ú–µ–Ω—é –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π\n–í–∞—à–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:{'–í–∫–ª—é—á–µ–Ω—ã ‚úÖ' if reminder[3] else '–í—ã–∫–ª—é—á–µ–Ω—ã‚ùå'}\n–°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è ‚è∞: {reminder[2]}" ,
                             reply_markup=reminder_inline_kb)
    else:
        await message.answer(
            f"–ú–µ–Ω—é –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π\n–í–∞—à–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: –í—ã–∫–ª—é—á–µ–Ω—ã ‚ùå\n–°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è ‚è∞: –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç",
            reply_markup=reminder_inline_kb)

@router.message(F.text == "üèÜ –£—Ä–æ–≤–µ–Ω—å")
async def rating(message: Message):
    await message.answer(f"–í–∞—à –¢–µ–∫—É—â–∏–π –£—Ä–æ–≤–µ–Ω—å üèÜ: {db.get_user_level(message.from_user.id)}\n\n–†–µ—à–∞–π—Ç–µ –±–æ–ª—å—à–µ –∑–∞–¥–∞–Ω–∏–π, —á—Ç–æ–±—ã –±—ã—Ç—å –ª—É—á—à–µ –≤—Å–µ—Ö!")

@router.message(F.text == "‚ÑπÔ∏è –ü–æ–º–æ—â—å")
async def help(message: Message):
    await message.answer(f"–ü–æ–º–æ—â–∏ –Ω–µ –±—É–¥–µ—Ç")